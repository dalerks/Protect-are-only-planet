//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the poopstatsData datasource.
    /// </summary>
    public sealed partial class poopstatsDataService
        : global::LightSwitchApplication.poopstatsData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public poopstatsDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Inserting(global::LightSwitchApplication.DropShip entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Inserted(global::LightSwitchApplication.DropShip entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Updating(global::LightSwitchApplication.DropShip entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Updated(global::LightSwitchApplication.DropShip entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Deleting(global::LightSwitchApplication.DropShip entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Deleted(global::LightSwitchApplication.DropShip entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Validate(global::LightSwitchApplication.DropShip entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Inserting(global::LightSwitchApplication.Gift entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Inserted(global::LightSwitchApplication.Gift entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Updating(global::LightSwitchApplication.Gift entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Updated(global::LightSwitchApplication.Gift entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Deleting(global::LightSwitchApplication.Gift entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Deleted(global::LightSwitchApplication.Gift entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Validate(global::LightSwitchApplication.Gift entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Inserting(global::LightSwitchApplication.ORG entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Inserted(global::LightSwitchApplication.ORG entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Updating(global::LightSwitchApplication.ORG entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Updated(global::LightSwitchApplication.ORG entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Deleting(global::LightSwitchApplication.ORG entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Deleted(global::LightSwitchApplication.ORG entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Validate(global::LightSwitchApplication.ORG entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Inserting(global::LightSwitchApplication.Batch entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Inserted(global::LightSwitchApplication.Batch entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Updating(global::LightSwitchApplication.Batch entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Updated(global::LightSwitchApplication.Batch entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Deleting(global::LightSwitchApplication.Batch entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Deleted(global::LightSwitchApplication.Batch entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Validate(global::LightSwitchApplication.Batch entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Inserting(global::LightSwitchApplication.Order_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Inserted(global::LightSwitchApplication.Order_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Updating(global::LightSwitchApplication.Order_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Updated(global::LightSwitchApplication.Order_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Deleting(global::LightSwitchApplication.Order_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Deleted(global::LightSwitchApplication.Order_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Validate(global::LightSwitchApplication.Order_Detail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Inserting(global::LightSwitchApplication.aspnet_WebEvent_Event entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Inserted(global::LightSwitchApplication.aspnet_WebEvent_Event entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Updating(global::LightSwitchApplication.aspnet_WebEvent_Event entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Updated(global::LightSwitchApplication.aspnet_WebEvent_Event entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Deleting(global::LightSwitchApplication.aspnet_WebEvent_Event entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Deleted(global::LightSwitchApplication.aspnet_WebEvent_Event entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Validate(global::LightSwitchApplication.aspnet_WebEvent_Event entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Inserting(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Inserted(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Updating(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Updated(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Deleting(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Deleted(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Validate(global::LightSwitchApplication.c_Error entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Inserting(global::LightSwitchApplication.XML entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Inserted(global::LightSwitchApplication.XML entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Updating(global::LightSwitchApplication.XML entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Updated(global::LightSwitchApplication.XML entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Deleting(global::LightSwitchApplication.XML entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Deleted(global::LightSwitchApplication.XML entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Validate(global::LightSwitchApplication.XML entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updating(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updated(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Validate(global::LightSwitchApplication.Order entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_Validate(global::LightSwitchApplication.Orders_For_Art entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Single_Executing(global::System.Nullable<int> Dropshipid);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Single_PreprocessQuery(global::System.Nullable<int> Dropshipid, ref global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Single_Executed(global::System.Nullable<int> Dropshipid, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DropShip> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_Single_ExecuteFailed(global::System.Nullable<int> Dropshipid, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_SingleOrDefault_Executing(global::System.Nullable<int> Dropshipid);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Dropshipid, ref global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_SingleOrDefault_Executed(global::System.Nullable<int> Dropshipid, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DropShip> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Dropshipid, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DropShip> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DropShips_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Single_Executing(string SKU);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Single_PreprocessQuery(string SKU, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Gift> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Single_Executed(string SKU, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Gift> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_Single_ExecuteFailed(string SKU, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_SingleOrDefault_Executing(string SKU);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_SingleOrDefault_PreprocessQuery(string SKU, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Gift> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_SingleOrDefault_Executed(string SKU, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Gift> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_SingleOrDefault_ExecuteFailed(string SKU, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Gift> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Gift> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Gifts_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Single_Executing(string ORG_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Single_PreprocessQuery(string ORG_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ORG> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Single_Executed(string ORG_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ORG> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_Single_ExecuteFailed(string ORG_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_SingleOrDefault_Executing(string ORG_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_SingleOrDefault_PreprocessQuery(string ORG_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ORG> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_SingleOrDefault_Executed(string ORG_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ORG> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_SingleOrDefault_ExecuteFailed(string ORG_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ORG> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ORG> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORGs_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Single_Executing(global::System.Nullable<int> Batchid);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Single_PreprocessQuery(global::System.Nullable<int> Batchid, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Batch> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Single_Executed(global::System.Nullable<int> Batchid, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Batch> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_Single_ExecuteFailed(global::System.Nullable<int> Batchid, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_SingleOrDefault_Executing(global::System.Nullable<int> Batchid);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Batchid, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Batch> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_SingleOrDefault_Executed(global::System.Nullable<int> Batchid, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Batch> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Batchid, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Batch> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Batch> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Batches_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Single_Executing(global::System.Nullable<int> OrderDetailID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Single_PreprocessQuery(global::System.Nullable<int> OrderDetailID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Single_Executed(global::System.Nullable<int> OrderDetailID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order_Detail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_Single_ExecuteFailed(global::System.Nullable<int> OrderDetailID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_SingleOrDefault_Executing(global::System.Nullable<int> OrderDetailID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> OrderDetailID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_SingleOrDefault_Executed(global::System.Nullable<int> OrderDetailID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order_Detail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> OrderDetailID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order_Detail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Details_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Single_Executing(string EventId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Single_PreprocessQuery(string EventId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Single_Executed(string EventId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.aspnet_WebEvent_Event> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_Single_ExecuteFailed(string EventId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_SingleOrDefault_Executing(string EventId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_SingleOrDefault_PreprocessQuery(string EventId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_SingleOrDefault_Executed(string EventId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.aspnet_WebEvent_Event> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_SingleOrDefault_ExecuteFailed(string EventId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.aspnet_WebEvent_Event> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void aspnet_WebEvent_Events_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_Executing(global::System.Nullable<int> ErrorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_PreprocessQuery(global::System.Nullable<int> ErrorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_Executed(global::System.Nullable<int> ErrorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_ExecuteFailed(global::System.Nullable<int> ErrorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_Executing(global::System.Nullable<int> ErrorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> ErrorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_Executed(global::System.Nullable<int> ErrorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> ErrorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Single_Executing(global::System.Nullable<int> XMLID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Single_PreprocessQuery(global::System.Nullable<int> XMLID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.XML> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Single_Executed(global::System.Nullable<int> XMLID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.XML> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_Single_ExecuteFailed(global::System.Nullable<int> XMLID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_SingleOrDefault_Executing(global::System.Nullable<int> XMLID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> XMLID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.XML> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_SingleOrDefault_Executed(global::System.Nullable<int> XMLID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.XML> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> XMLID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.XML> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.XML> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void XMLs_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_Executing(global::System.Nullable<int> OrderNumber);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_PreprocessQuery(global::System.Nullable<int> OrderNumber, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_Executed(global::System.Nullable<int> OrderNumber, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_ExecuteFailed(global::System.Nullable<int> OrderNumber, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_Executing(global::System.Nullable<int> OrderNumber);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> OrderNumber, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_Executed(global::System.Nullable<int> OrderNumber, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> OrderNumber, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_Single_Executing(global::System.Nullable<int> OrderDetailID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_Single_PreprocessQuery(global::System.Nullable<int> OrderDetailID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_Single_Executed(global::System.Nullable<int> OrderDetailID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_Single_ExecuteFailed(global::System.Nullable<int> OrderDetailID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_SingleOrDefault_Executing(global::System.Nullable<int> OrderDetailID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> OrderDetailID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_SingleOrDefault_Executed(global::System.Nullable<int> OrderDetailID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> OrderDetailID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Arts_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_Executing(global::System.Nullable<int> Batchid);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_PreprocessQuery(global::System.Nullable<int> Batchid, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_Executed(global::System.Nullable<int> Batchid, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_ExecuteFailed(global::System.Nullable<int> Batchid, global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>
                __DropShipsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>(
                    "DropShips",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Validate);
            private static bool __DropShips_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.DropShips_CanInsert(ref result);
                return result;
            }
            private static bool __DropShips_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.DropShips_CanUpdate(ref result);
                return result;
            }
            private static bool __DropShips_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.DropShips_CanDelete(ref result);
                return result;
            }
            private static bool __DropShips_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.DropShips_CanRead(ref result);
                return result;
            }
            private static void __DropShips_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e)
            {
                d.DropShips_Inserting(e);
            }
            private static void __DropShips_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e)
            {
                d.DropShips_Inserted(e);
            }
            private static void __DropShips_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e)
            {
                d.DropShips_Updating(e);
            }
            private static void __DropShips_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e)
            {
                d.DropShips_Updated(e);
            }
            private static void __DropShips_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e)
            {
                d.DropShips_Deleting(e);
            }
            private static void __DropShips_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e)
            {
                d.DropShips_Deleted(e);
            }
            private static void __DropShips_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.DropShip e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DropShips_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>
                __GiftsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>(
                    "Gifts",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Validate);
            private static bool __Gifts_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Gifts_CanInsert(ref result);
                return result;
            }
            private static bool __Gifts_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Gifts_CanUpdate(ref result);
                return result;
            }
            private static bool __Gifts_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Gifts_CanDelete(ref result);
                return result;
            }
            private static bool __Gifts_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Gifts_CanRead(ref result);
                return result;
            }
            private static void __Gifts_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e)
            {
                d.Gifts_Inserting(e);
            }
            private static void __Gifts_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e)
            {
                d.Gifts_Inserted(e);
            }
            private static void __Gifts_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e)
            {
                d.Gifts_Updating(e);
            }
            private static void __Gifts_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e)
            {
                d.Gifts_Updated(e);
            }
            private static void __Gifts_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e)
            {
                d.Gifts_Deleting(e);
            }
            private static void __Gifts_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e)
            {
                d.Gifts_Deleted(e);
            }
            private static void __Gifts_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Gift e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Gifts_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>
                __ORGsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>(
                    "ORGs",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Validate);
            private static bool __ORGs_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.ORGs_CanInsert(ref result);
                return result;
            }
            private static bool __ORGs_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.ORGs_CanUpdate(ref result);
                return result;
            }
            private static bool __ORGs_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.ORGs_CanDelete(ref result);
                return result;
            }
            private static bool __ORGs_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.ORGs_CanRead(ref result);
                return result;
            }
            private static void __ORGs_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e)
            {
                d.ORGs_Inserting(e);
            }
            private static void __ORGs_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e)
            {
                d.ORGs_Inserted(e);
            }
            private static void __ORGs_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e)
            {
                d.ORGs_Updating(e);
            }
            private static void __ORGs_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e)
            {
                d.ORGs_Updated(e);
            }
            private static void __ORGs_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e)
            {
                d.ORGs_Deleting(e);
            }
            private static void __ORGs_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e)
            {
                d.ORGs_Deleted(e);
            }
            private static void __ORGs_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ORGs_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>
                __BatchesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>(
                    "Batches",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Validate);
            private static bool __Batches_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Batches_CanInsert(ref result);
                return result;
            }
            private static bool __Batches_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Batches_CanUpdate(ref result);
                return result;
            }
            private static bool __Batches_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Batches_CanDelete(ref result);
                return result;
            }
            private static bool __Batches_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Batches_CanRead(ref result);
                return result;
            }
            private static void __Batches_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e)
            {
                d.Batches_Inserting(e);
            }
            private static void __Batches_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e)
            {
                d.Batches_Inserted(e);
            }
            private static void __Batches_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e)
            {
                d.Batches_Updating(e);
            }
            private static void __Batches_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e)
            {
                d.Batches_Updated(e);
            }
            private static void __Batches_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e)
            {
                d.Batches_Deleting(e);
            }
            private static void __Batches_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e)
            {
                d.Batches_Deleted(e);
            }
            private static void __Batches_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Batch e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Batches_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>
                __Order_DetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>(
                    "Order_Details",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Validate);
            private static bool __Order_Details_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Order_Details_CanInsert(ref result);
                return result;
            }
            private static bool __Order_Details_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Order_Details_CanUpdate(ref result);
                return result;
            }
            private static bool __Order_Details_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Order_Details_CanDelete(ref result);
                return result;
            }
            private static bool __Order_Details_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Order_Details_CanRead(ref result);
                return result;
            }
            private static void __Order_Details_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e)
            {
                d.Order_Details_Inserting(e);
            }
            private static void __Order_Details_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e)
            {
                d.Order_Details_Inserted(e);
            }
            private static void __Order_Details_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e)
            {
                d.Order_Details_Updating(e);
            }
            private static void __Order_Details_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e)
            {
                d.Order_Details_Updated(e);
            }
            private static void __Order_Details_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e)
            {
                d.Order_Details_Deleting(e);
            }
            private static void __Order_Details_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e)
            {
                d.Order_Details_Deleted(e);
            }
            private static void __Order_Details_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order_Detail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Order_Details_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>
                __aspnet_WebEvent_EventsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>(
                    "aspnet_WebEvent_Events",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Validate);
            private static bool __aspnet_WebEvent_Events_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.aspnet_WebEvent_Events_CanInsert(ref result);
                return result;
            }
            private static bool __aspnet_WebEvent_Events_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.aspnet_WebEvent_Events_CanUpdate(ref result);
                return result;
            }
            private static bool __aspnet_WebEvent_Events_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.aspnet_WebEvent_Events_CanDelete(ref result);
                return result;
            }
            private static bool __aspnet_WebEvent_Events_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.aspnet_WebEvent_Events_CanRead(ref result);
                return result;
            }
            private static void __aspnet_WebEvent_Events_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e)
            {
                d.aspnet_WebEvent_Events_Inserting(e);
            }
            private static void __aspnet_WebEvent_Events_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e)
            {
                d.aspnet_WebEvent_Events_Inserted(e);
            }
            private static void __aspnet_WebEvent_Events_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e)
            {
                d.aspnet_WebEvent_Events_Updating(e);
            }
            private static void __aspnet_WebEvent_Events_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e)
            {
                d.aspnet_WebEvent_Events_Updated(e);
            }
            private static void __aspnet_WebEvent_Events_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e)
            {
                d.aspnet_WebEvent_Events_Deleting(e);
            }
            private static void __aspnet_WebEvent_Events_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e)
            {
                d.aspnet_WebEvent_Events_Deleted(e);
            }
            private static void __aspnet_WebEvent_Events_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.aspnet_WebEvent_Event e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.aspnet_WebEvent_Events_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>
                __ErrorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>(
                    "Errors",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Validate);
            private static bool __Errors_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Errors_CanInsert(ref result);
                return result;
            }
            private static bool __Errors_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Errors_CanUpdate(ref result);
                return result;
            }
            private static bool __Errors_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Errors_CanDelete(ref result);
                return result;
            }
            private static bool __Errors_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Errors_CanRead(ref result);
                return result;
            }
            private static void __Errors_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Inserting(e);
            }
            private static void __Errors_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Inserted(e);
            }
            private static void __Errors_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Updating(e);
            }
            private static void __Errors_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Updated(e);
            }
            private static void __Errors_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Deleting(e);
            }
            private static void __Errors_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Deleted(e);
            }
            private static void __Errors_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.c_Error e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Errors_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>
                __XMLsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>(
                    "XMLs",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Validate);
            private static bool __XMLs_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.XMLs_CanInsert(ref result);
                return result;
            }
            private static bool __XMLs_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.XMLs_CanUpdate(ref result);
                return result;
            }
            private static bool __XMLs_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.XMLs_CanDelete(ref result);
                return result;
            }
            private static bool __XMLs_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.XMLs_CanRead(ref result);
                return result;
            }
            private static void __XMLs_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e)
            {
                d.XMLs_Inserting(e);
            }
            private static void __XMLs_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e)
            {
                d.XMLs_Inserted(e);
            }
            private static void __XMLs_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e)
            {
                d.XMLs_Updating(e);
            }
            private static void __XMLs_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e)
            {
                d.XMLs_Updated(e);
            }
            private static void __XMLs_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e)
            {
                d.XMLs_Deleting(e);
            }
            private static void __XMLs_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e)
            {
                d.XMLs_Deleted(e);
            }
            private static void __XMLs_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.XML e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.XMLs_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>
                __OrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>(
                    "Orders",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_CanInsert,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_CanUpdate,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_CanDelete,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_CanRead,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Inserting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Inserted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Updating,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Updated,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Deleting,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Deleted,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Validate);
            private static bool __Orders_CanInsert(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Orders_CanInsert(ref result);
                return result;
            }
            private static bool __Orders_CanUpdate(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Orders_CanUpdate(ref result);
                return result;
            }
            private static bool __Orders_CanDelete(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Orders_CanDelete(ref result);
                return result;
            }
            private static bool __Orders_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Orders_CanRead(ref result);
                return result;
            }
            private static void __Orders_Inserting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserting(e);
            }
            private static void __Orders_Inserted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserted(e);
            }
            private static void __Orders_Updating(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updating(e);
            }
            private static void __Orders_Updated(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updated(e);
            }
            private static void __Orders_Deleting(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleting(e);
            }
            private static void __Orders_Deleted(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleted(e);
            }
            private static void __Orders_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>
                __Orders_For_ArtsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>(
                    "Orders_For_Arts",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_Validate);
            private static bool __Orders_For_Arts_CanRead(global::LightSwitchApplication.poopstatsDataService d)
            {
                bool result = true;
                d.Orders_For_Arts_CanRead(ref result);
                return result;
            }
            private static void __Orders_For_Arts_Validate(global::LightSwitchApplication.poopstatsDataService d, global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_For_Arts_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.poopstatsDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.poopstatsDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>
                __DropShips_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>(
                    "DropShips_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_Single_PreprocessQuery);
            private static bool __DropShips_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.DropShips_Single_CanExecute(ref r);
                return r;
            }
            private static void __DropShips_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.DropShips_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __DropShips_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.DropShips_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DropShip>)args[1]);
            }
            private static void __DropShips_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.DropShips_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DropShips_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip>)args[1];
                d.DropShips_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>
                __DropShips_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>(
                    "DropShips_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_SingleOrDefault_PreprocessQuery);
            private static bool __DropShips_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.DropShips_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __DropShips_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.DropShips_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __DropShips_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.DropShips_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DropShip>)args[1]);
            }
            private static void __DropShips_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.DropShips_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DropShips_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip>)args[1];
                d.DropShips_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>
                __DropShips_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.DropShip>(
                    "DropShips_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__DropShips_All_PreprocessQuery);
            private static bool __DropShips_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.DropShips_All_CanExecute(ref r);
                return r;
            }
            private static void __DropShips_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.DropShips_All_Executing();
            }
            private static void __DropShips_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.DropShips_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DropShip>)args[0]);
            }
            private static void __DropShips_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.DropShips_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DropShips_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DropShip>)args[0];
                d.DropShips_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>
                __Gifts_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>(
                    "Gifts_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_Single_PreprocessQuery);
            private static bool __Gifts_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Gifts_Single_CanExecute(ref r);
                return r;
            }
            private static void __Gifts_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Gifts_Single_Executing((string)args[0]);
            }
            private static void __Gifts_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Gifts_Single_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Gift>)args[1]);
            }
            private static void __Gifts_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Gifts_Single_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Gifts_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Gift> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Gift>)args[1];
                d.Gifts_Single_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>
                __Gifts_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>(
                    "Gifts_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_SingleOrDefault_PreprocessQuery);
            private static bool __Gifts_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Gifts_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Gifts_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Gifts_SingleOrDefault_Executing((string)args[0]);
            }
            private static void __Gifts_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Gifts_SingleOrDefault_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Gift>)args[1]);
            }
            private static void __Gifts_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Gifts_SingleOrDefault_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Gifts_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Gift> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Gift>)args[1];
                d.Gifts_SingleOrDefault_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>
                __Gifts_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Gift>(
                    "Gifts_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Gifts_All_PreprocessQuery);
            private static bool __Gifts_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Gifts_All_CanExecute(ref r);
                return r;
            }
            private static void __Gifts_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Gifts_All_Executing();
            }
            private static void __Gifts_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Gifts_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Gift>)args[0]);
            }
            private static void __Gifts_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Gifts_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Gifts_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Gift> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Gift>)args[0];
                d.Gifts_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>
                __ORGs_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>(
                    "ORGs_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_Single_PreprocessQuery);
            private static bool __ORGs_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.ORGs_Single_CanExecute(ref r);
                return r;
            }
            private static void __ORGs_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.ORGs_Single_Executing((string)args[0]);
            }
            private static void __ORGs_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.ORGs_Single_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ORG>)args[1]);
            }
            private static void __ORGs_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.ORGs_Single_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ORGs_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ORG> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ORG>)args[1];
                d.ORGs_Single_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>
                __ORGs_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>(
                    "ORGs_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_SingleOrDefault_PreprocessQuery);
            private static bool __ORGs_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.ORGs_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ORGs_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.ORGs_SingleOrDefault_Executing((string)args[0]);
            }
            private static void __ORGs_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.ORGs_SingleOrDefault_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ORG>)args[1]);
            }
            private static void __ORGs_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.ORGs_SingleOrDefault_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ORGs_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ORG> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ORG>)args[1];
                d.ORGs_SingleOrDefault_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>
                __ORGs_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.ORG>(
                    "ORGs_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__ORGs_All_PreprocessQuery);
            private static bool __ORGs_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.ORGs_All_CanExecute(ref r);
                return r;
            }
            private static void __ORGs_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.ORGs_All_Executing();
            }
            private static void __ORGs_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.ORGs_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ORG>)args[0]);
            }
            private static void __ORGs_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.ORGs_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ORGs_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ORG> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ORG>)args[0];
                d.ORGs_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>
                __Batches_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>(
                    "Batches_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_Single_PreprocessQuery);
            private static bool __Batches_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Batches_Single_CanExecute(ref r);
                return r;
            }
            private static void __Batches_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Batches_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Batches_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Batches_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Batch>)args[1]);
            }
            private static void __Batches_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Batches_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Batches_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Batch> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Batch>)args[1];
                d.Batches_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>
                __Batches_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>(
                    "Batches_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_SingleOrDefault_PreprocessQuery);
            private static bool __Batches_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Batches_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Batches_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Batches_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Batches_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Batches_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Batch>)args[1]);
            }
            private static void __Batches_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Batches_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Batches_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Batch> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Batch>)args[1];
                d.Batches_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>
                __Batches_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Batch>(
                    "Batches_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Batches_All_PreprocessQuery);
            private static bool __Batches_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Batches_All_CanExecute(ref r);
                return r;
            }
            private static void __Batches_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Batches_All_Executing();
            }
            private static void __Batches_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Batches_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Batch>)args[0]);
            }
            private static void __Batches_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Batches_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Batches_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Batch> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Batch>)args[0];
                d.Batches_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>
                __Order_Details_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>(
                    "Order_Details_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_Single_PreprocessQuery);
            private static bool __Order_Details_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Order_Details_Single_CanExecute(ref r);
                return r;
            }
            private static void __Order_Details_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Order_Details_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Order_Details_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Order_Details_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order_Detail>)args[1]);
            }
            private static void __Order_Details_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Order_Details_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Order_Details_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail>)args[1];
                d.Order_Details_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>
                __Order_Details_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>(
                    "Order_Details_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_SingleOrDefault_PreprocessQuery);
            private static bool __Order_Details_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Order_Details_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Order_Details_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Order_Details_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Order_Details_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Order_Details_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order_Detail>)args[1]);
            }
            private static void __Order_Details_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Order_Details_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Order_Details_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail>)args[1];
                d.Order_Details_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>
                __Order_Details_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order_Detail>(
                    "Order_Details_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Order_Details_All_PreprocessQuery);
            private static bool __Order_Details_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Order_Details_All_CanExecute(ref r);
                return r;
            }
            private static void __Order_Details_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Order_Details_All_Executing();
            }
            private static void __Order_Details_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Order_Details_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order_Detail>)args[0]);
            }
            private static void __Order_Details_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Order_Details_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Order_Details_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order_Detail>)args[0];
                d.Order_Details_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>
                __aspnet_WebEvent_Events_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>(
                    "aspnet_WebEvent_Events_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_Single_PreprocessQuery);
            private static bool __aspnet_WebEvent_Events_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.aspnet_WebEvent_Events_Single_CanExecute(ref r);
                return r;
            }
            private static void __aspnet_WebEvent_Events_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.aspnet_WebEvent_Events_Single_Executing((string)args[0]);
            }
            private static void __aspnet_WebEvent_Events_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.aspnet_WebEvent_Events_Single_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.aspnet_WebEvent_Event>)args[1]);
            }
            private static void __aspnet_WebEvent_Events_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.aspnet_WebEvent_Events_Single_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __aspnet_WebEvent_Events_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event>)args[1];
                d.aspnet_WebEvent_Events_Single_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>
                __aspnet_WebEvent_Events_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>(
                    "aspnet_WebEvent_Events_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_SingleOrDefault_PreprocessQuery);
            private static bool __aspnet_WebEvent_Events_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.aspnet_WebEvent_Events_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __aspnet_WebEvent_Events_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.aspnet_WebEvent_Events_SingleOrDefault_Executing((string)args[0]);
            }
            private static void __aspnet_WebEvent_Events_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.aspnet_WebEvent_Events_SingleOrDefault_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.aspnet_WebEvent_Event>)args[1]);
            }
            private static void __aspnet_WebEvent_Events_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.aspnet_WebEvent_Events_SingleOrDefault_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __aspnet_WebEvent_Events_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event>)args[1];
                d.aspnet_WebEvent_Events_SingleOrDefault_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>
                __aspnet_WebEvent_Events_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.aspnet_WebEvent_Event>(
                    "aspnet_WebEvent_Events_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__aspnet_WebEvent_Events_All_PreprocessQuery);
            private static bool __aspnet_WebEvent_Events_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.aspnet_WebEvent_Events_All_CanExecute(ref r);
                return r;
            }
            private static void __aspnet_WebEvent_Events_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.aspnet_WebEvent_Events_All_Executing();
            }
            private static void __aspnet_WebEvent_Events_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.aspnet_WebEvent_Events_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.aspnet_WebEvent_Event>)args[0]);
            }
            private static void __aspnet_WebEvent_Events_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.aspnet_WebEvent_Events_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __aspnet_WebEvent_Events_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.aspnet_WebEvent_Event>)args[0];
                d.aspnet_WebEvent_Events_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>
                __Errors_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>(
                    "Errors_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_Single_PreprocessQuery);
            private static bool __Errors_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Errors_Single_CanExecute(ref r);
                return r;
            }
            private static void __Errors_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Errors_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Errors_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Errors_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error>)args[1]);
            }
            private static void __Errors_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Errors_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Errors_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error>)args[1];
                d.Errors_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>
                __Errors_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>(
                    "Errors_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_SingleOrDefault_PreprocessQuery);
            private static bool __Errors_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Errors_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Errors_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Errors_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Errors_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Errors_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error>)args[1]);
            }
            private static void __Errors_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Errors_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Errors_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error>)args[1];
                d.Errors_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>
                __Errors_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.c_Error>(
                    "Errors_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Errors_All_PreprocessQuery);
            private static bool __Errors_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Errors_All_CanExecute(ref r);
                return r;
            }
            private static void __Errors_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Errors_All_Executing();
            }
            private static void __Errors_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Errors_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error>)args[0]);
            }
            private static void __Errors_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Errors_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Errors_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error>)args[0];
                d.Errors_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>
                __XMLs_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>(
                    "XMLs_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_Single_PreprocessQuery);
            private static bool __XMLs_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.XMLs_Single_CanExecute(ref r);
                return r;
            }
            private static void __XMLs_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.XMLs_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __XMLs_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.XMLs_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.XML>)args[1]);
            }
            private static void __XMLs_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.XMLs_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __XMLs_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.XML> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.XML>)args[1];
                d.XMLs_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>
                __XMLs_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>(
                    "XMLs_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_SingleOrDefault_PreprocessQuery);
            private static bool __XMLs_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.XMLs_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __XMLs_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.XMLs_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __XMLs_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.XMLs_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.XML>)args[1]);
            }
            private static void __XMLs_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.XMLs_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __XMLs_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.XML> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.XML>)args[1];
                d.XMLs_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>
                __XMLs_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.XML>(
                    "XMLs_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__XMLs_All_PreprocessQuery);
            private static bool __XMLs_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.XMLs_All_CanExecute(ref r);
                return r;
            }
            private static void __XMLs_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.XMLs_All_Executing();
            }
            private static void __XMLs_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.XMLs_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.XML>)args[0]);
            }
            private static void __XMLs_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.XMLs_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __XMLs_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.XML> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.XML>)args[0];
                d.XMLs_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>
                __Orders_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>(
                    "Orders_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_Single_PreprocessQuery);
            private static bool __Orders_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Orders_Single_CanExecute(ref r);
                return r;
            }
            private static void __Orders_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Orders_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[1]);
            }
            private static void __Orders_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Orders_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[1];
                d.Orders_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>
                __Orders_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>(
                    "Orders_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_SingleOrDefault_PreprocessQuery);
            private static bool __Orders_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Orders_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Orders_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Orders_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[1]);
            }
            private static void __Orders_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Orders_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[1];
                d.Orders_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>
                __Orders_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Order>(
                    "Orders_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_All_PreprocessQuery);
            private static bool __Orders_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Orders_All_CanExecute(ref r);
                return r;
            }
            private static void __Orders_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_All_Executing();
            }
            private static void __Orders_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[0]);
            }
            private static void __Orders_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Orders_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[0];
                d.Orders_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>
                __Orders_For_Arts_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>(
                    "Orders_For_Arts_Single",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_Single_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_Single_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_Single_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_Single_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_Single_PreprocessQuery);
            private static bool __Orders_For_Arts_Single_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Orders_For_Arts_Single_CanExecute(ref r);
                return r;
            }
            private static void __Orders_For_Arts_Single_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_For_Arts_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Orders_For_Arts_Single_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_For_Arts_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art>)args[1]);
            }
            private static void __Orders_For_Arts_Single_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_For_Arts_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Orders_For_Arts_Single_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art>)args[1];
                d.Orders_For_Arts_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>
                __Orders_For_Arts_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>(
                    "Orders_For_Arts_SingleOrDefault",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_SingleOrDefault_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_SingleOrDefault_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_SingleOrDefault_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_SingleOrDefault_PreprocessQuery);
            private static bool __Orders_For_Arts_SingleOrDefault_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Orders_For_Arts_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Orders_For_Arts_SingleOrDefault_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_For_Arts_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Orders_For_Arts_SingleOrDefault_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_For_Arts_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art>)args[1]);
            }
            private static void __Orders_For_Arts_SingleOrDefault_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_For_Arts_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Orders_For_Arts_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art>)args[1];
                d.Orders_For_Arts_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>
                __Orders_For_Arts_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>(
                    "Orders_For_Arts_All",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_All_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_All_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_All_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_All_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Orders_For_Arts_All_PreprocessQuery);
            private static bool __Orders_For_Arts_All_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Orders_For_Arts_All_CanExecute(ref r);
                return r;
            }
            private static void __Orders_For_Arts_All_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_For_Arts_All_Executing();
            }
            private static void __Orders_For_Arts_All_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Orders_For_Arts_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art>)args[0]);
            }
            private static void __Orders_For_Arts_All_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_For_Arts_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Orders_For_Arts_All_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art>)args[0];
                d.Orders_For_Arts_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>
                __Query1Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.poopstatsDataService, global::LightSwitchApplication.Orders_For_Art>(
                    "Query1",
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Query1_CanExecute,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Query1_Executing,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Query1_Executed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Query1_Failed,
                    global::LightSwitchApplication.poopstatsDataService.DetailsClass.__Query1_PreprocessQuery);
            private static bool __Query1_CanExecute(global::LightSwitchApplication.poopstatsDataService d, bool r)
            {
                d.Query1_CanExecute(ref r);
                return r;
            }
            private static void __Query1_Executing(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Query1_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Query1_Executed(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                d.Query1_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders_For_Art>)args[1]);
            }
            private static void __Query1_Failed(global::LightSwitchApplication.poopstatsDataService d, object[] args, global::System.Exception ex)
            {
                d.Query1_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Query1_PreprocessQuery(global::LightSwitchApplication.poopstatsDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders_For_Art>)args[1];
                d.Query1_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
