

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Orders_For_Art : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Orders_For_Art entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Orders_For_Art()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Orders_For_Art(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Orders_For_Art> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Orders_For_Art.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Art_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_For_Art_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipFirstName
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFirstName);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFirstName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipFirstName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipFirstName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipFirstName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipLastName
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipLastName);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipLastName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipLastName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipLastName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipLastName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipCompanyName
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCompanyName);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCompanyName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCompanyName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCompanyName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCompanyName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipAddress1
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipAddress1);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipAddress1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipAddress1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipAddress1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipAddress1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipAddress2
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipAddress2);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipAddress2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipAddress2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipAddress2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipAddress2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipCity
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCity);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipState
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipState);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipState, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipState_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipState_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipState_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipPostalCode
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipPostalCode);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipPostalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipPostalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipPostalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipPostalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipCountry
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCountry);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCountry, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCountry_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCountry_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipCountry_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipPhoneNumber
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipPhoneNumber);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipPhoneNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipPhoneNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipPhoneNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipPhoneNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Shipping_Locked
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Shipping_Locked);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Shipping_Locked, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipping_Locked_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipping_Locked_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipping_Locked_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ShippingMethodID
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShippingMethodID);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShippingMethodID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethodID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethodID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethodID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipResidential
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipResidential);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipResidential, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipResidential_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipResidential_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipResidential_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipFaxNumber
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFaxNumber);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFaxNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipFaxNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipFaxNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipFaxNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int OrderDetailID
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OrderDetailID);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OrderDetailID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string GiftWrap
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrap);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrap, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrap_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrap_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrap_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> GiftTrakNumber
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftTrakNumber);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftTrakNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftTrakNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftTrakNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftTrakNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> GiftWrapCost
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrapCost);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrapCost, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrapCost_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrapCost_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrapCost_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string GiftWrapNote
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrapNote);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrapNote, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrapNote_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrapNote_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GiftWrapNote_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IsKitID
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.IsKitID);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.IsKitID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsKitID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsKitID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsKitID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> KitID
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.KitID);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.KitID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KitID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KitID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KitID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> OnOrder_Qty
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OnOrder_Qty);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OnOrder_Qty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnOrder_Qty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnOrder_Qty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnOrder_Qty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> OptionIDs
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OptionIDs);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OptionIDs, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OptionIDs_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OptionIDs_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OptionIDs_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Options
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Options);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Options, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Options_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Options_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Options_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> OrderID
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OrderID);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OrderID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProductCode
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductCode);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ProductID
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductID);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProductName
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductName);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ProductPrice
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductPrice);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductPrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductPrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductPrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductPrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ProductWeight
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductWeight);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductWeight, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductWeight_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductWeight_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductWeight_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Sent
        {
            get
            {
                return global::LightSwitchApplication.Orders_For_Art.DetailsClass.GetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Sent);
            }
            set
            {
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.SetValue(this, global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Sent, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sent_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sent_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sent_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Orders_For_Art,
                global::LightSwitchApplication.Orders_For_Art.DetailsClass,
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.IImplementation,
                global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFirstName;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass>.Entry
                __Orders_For_ArtEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass>.Entry(
                    global::LightSwitchApplication.Orders_For_Art.DetailsClass.__Orders_For_Art_CreateNew,
                    global::LightSwitchApplication.Orders_For_Art.DetailsClass.__Orders_For_Art_Created,
                    global::LightSwitchApplication.Orders_For_Art.DetailsClass.__Orders_For_Art_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Orders_For_Art __Orders_For_Art_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Orders_For_Art> es)
            {
                return new global::LightSwitchApplication.Orders_For_Art(es);
            }
            private static void __Orders_For_Art_Created(global::LightSwitchApplication.Orders_For_Art e)
            {
                e.Orders_For_Art_Created();
            }
            private static bool __Orders_For_Art_AllowSaveWithErrors(global::LightSwitchApplication.Orders_For_Art e)
            {
                bool result = false;
                e.Orders_For_Art_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipFirstName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFirstName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipLastName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipLastName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipCompanyName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCompanyName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipAddress1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipAddress1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipAddress2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipAddress2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipCity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipState
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipState) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipPostalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipPostalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipCountry
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipCountry) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipPhoneNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipPhoneNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> Shipping_Locked
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Shipping_Locked) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> ShippingMethodID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShippingMethodID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipResidential
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipResidential) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ShipFaxNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ShipFaxNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, int> OrderDetailID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OrderDetailID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> GiftWrap
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrap) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> GiftTrakNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftTrakNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>> GiftWrapCost
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrapCost) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> GiftWrapNote
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.GiftWrapNote) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> IsKitID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.IsKitID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> KitID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.KitID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> OnOrder_Qty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OnOrder_Qty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> OptionIDs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OptionIDs) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> Options
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Options) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> OrderID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.OrderID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ProductCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> ProductID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string> ProductName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>> ProductPrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductPrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> ProductWeight
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.ProductWeight) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>> Sent
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties.Sent) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ShipFirstName { get; set; }
                new string ShipLastName { get; set; }
                new string ShipCompanyName { get; set; }
                new string ShipAddress1 { get; set; }
                new string ShipAddress2 { get; set; }
                new string ShipCity { get; set; }
                new string ShipState { get; set; }
                new string ShipPostalCode { get; set; }
                new string ShipCountry { get; set; }
                new string ShipPhoneNumber { get; set; }
                new string Shipping_Locked { get; set; }
                new global::System.Nullable<int> ShippingMethodID { get; set; }
                new string ShipResidential { get; set; }
                new string ShipFaxNumber { get; set; }
                new int OrderDetailID { get; set; }
                new string GiftWrap { get; set; }
                new global::System.Nullable<int> GiftTrakNumber { get; set; }
                new global::System.Nullable<decimal> GiftWrapCost { get; set; }
                new string GiftWrapNote { get; set; }
                new string IsKitID { get; set; }
                new global::System.Nullable<int> KitID { get; set; }
                new global::System.Nullable<int> OnOrder_Qty { get; set; }
                new global::System.Nullable<int> OptionIDs { get; set; }
                new string Options { get; set; }
                new global::System.Nullable<int> OrderID { get; set; }
                new string ProductCode { get; set; }
                new global::System.Nullable<int> ProductID { get; set; }
                new string ProductName { get; set; }
                new global::System.Nullable<decimal> ProductPrice { get; set; }
                new global::System.Nullable<int> ProductWeight { get; set; }
                new global::System.Nullable<int> Sent { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipFirstName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipFirstName",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFirstName_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFirstName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFirstName_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFirstName_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFirstName_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFirstName_OnValueChanged);
                private static void _ShipFirstName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipFirstName, sf);
                }
                private static bool _ShipFirstName_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipFirstName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipFirstName_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipFirstName_Validate(r);
                }
                private static string _ShipFirstName_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipFirstName;
                }
                private static void _ShipFirstName_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipFirstName = v;
                }
                private static void _ShipFirstName_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipFirstName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipLastName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipLastName",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipLastName_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipLastName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipLastName_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipLastName_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipLastName_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipLastName_OnValueChanged);
                private static void _ShipLastName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipLastName, sf);
                }
                private static bool _ShipLastName_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipLastName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipLastName_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipLastName_Validate(r);
                }
                private static string _ShipLastName_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipLastName;
                }
                private static void _ShipLastName_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipLastName = v;
                }
                private static void _ShipLastName_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipLastName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipCompanyName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipCompanyName",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCompanyName_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCompanyName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCompanyName_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCompanyName_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCompanyName_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCompanyName_OnValueChanged);
                private static void _ShipCompanyName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipCompanyName, sf);
                }
                private static bool _ShipCompanyName_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipCompanyName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipCompanyName_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipCompanyName_Validate(r);
                }
                private static string _ShipCompanyName_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipCompanyName;
                }
                private static void _ShipCompanyName_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipCompanyName = v;
                }
                private static void _ShipCompanyName_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipCompanyName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipAddress1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipAddress1",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress1_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress1_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress1_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress1_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress1_OnValueChanged);
                private static void _ShipAddress1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipAddress1, sf);
                }
                private static bool _ShipAddress1_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipAddress1_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipAddress1_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipAddress1_Validate(r);
                }
                private static string _ShipAddress1_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipAddress1;
                }
                private static void _ShipAddress1_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipAddress1 = v;
                }
                private static void _ShipAddress1_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipAddress1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipAddress2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipAddress2",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress2_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress2_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress2_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress2_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipAddress2_OnValueChanged);
                private static void _ShipAddress2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipAddress2, sf);
                }
                private static bool _ShipAddress2_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipAddress2_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipAddress2_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipAddress2_Validate(r);
                }
                private static string _ShipAddress2_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipAddress2;
                }
                private static void _ShipAddress2_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipAddress2 = v;
                }
                private static void _ShipAddress2_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipAddress2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipCity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipCity",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCity_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCity_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCity_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCity_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCity_OnValueChanged);
                private static void _ShipCity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipCity, sf);
                }
                private static bool _ShipCity_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipCity_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipCity_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipCity_Validate(r);
                }
                private static string _ShipCity_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipCity;
                }
                private static void _ShipCity_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipCity = v;
                }
                private static void _ShipCity_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipCity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipState = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipState",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipState_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipState_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipState_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipState_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipState_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipState_OnValueChanged);
                private static void _ShipState_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipState, sf);
                }
                private static bool _ShipState_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipState_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipState_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipState_Validate(r);
                }
                private static string _ShipState_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipState;
                }
                private static void _ShipState_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipState = v;
                }
                private static void _ShipState_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipState_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipPostalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipPostalCode",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPostalCode_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPostalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPostalCode_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPostalCode_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPostalCode_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPostalCode_OnValueChanged);
                private static void _ShipPostalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipPostalCode, sf);
                }
                private static bool _ShipPostalCode_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipPostalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipPostalCode_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipPostalCode_Validate(r);
                }
                private static string _ShipPostalCode_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipPostalCode;
                }
                private static void _ShipPostalCode_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipPostalCode = v;
                }
                private static void _ShipPostalCode_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipPostalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipCountry = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipCountry",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCountry_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCountry_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCountry_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCountry_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCountry_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipCountry_OnValueChanged);
                private static void _ShipCountry_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipCountry, sf);
                }
                private static bool _ShipCountry_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipCountry_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipCountry_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipCountry_Validate(r);
                }
                private static string _ShipCountry_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipCountry;
                }
                private static void _ShipCountry_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipCountry = v;
                }
                private static void _ShipCountry_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipCountry_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipPhoneNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipPhoneNumber",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPhoneNumber_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPhoneNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPhoneNumber_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPhoneNumber_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPhoneNumber_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipPhoneNumber_OnValueChanged);
                private static void _ShipPhoneNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipPhoneNumber, sf);
                }
                private static bool _ShipPhoneNumber_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipPhoneNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipPhoneNumber_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipPhoneNumber_Validate(r);
                }
                private static string _ShipPhoneNumber_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipPhoneNumber;
                }
                private static void _ShipPhoneNumber_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipPhoneNumber = v;
                }
                private static void _ShipPhoneNumber_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipPhoneNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    Shipping_Locked = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "Shipping_Locked",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Shipping_Locked_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Shipping_Locked_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Shipping_Locked_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Shipping_Locked_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Shipping_Locked_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Shipping_Locked_OnValueChanged);
                private static void _Shipping_Locked_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._Shipping_Locked, sf);
                }
                private static bool _Shipping_Locked_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.Shipping_Locked_IsReadOnly(ref result);
                    return result;
                }
                private static void _Shipping_Locked_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Shipping_Locked_Validate(r);
                }
                private static string _Shipping_Locked_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.Shipping_Locked;
                }
                private static void _Shipping_Locked_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Shipping_Locked = v;
                }
                private static void _Shipping_Locked_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.Shipping_Locked_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    ShippingMethodID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ShippingMethodID",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShippingMethodID_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShippingMethodID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShippingMethodID_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShippingMethodID_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShippingMethodID_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShippingMethodID_OnValueChanged);
                private static void _ShippingMethodID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShippingMethodID, sf);
                }
                private static bool _ShippingMethodID_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShippingMethodID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShippingMethodID_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShippingMethodID_Validate(r);
                }
                private static global::System.Nullable<int> _ShippingMethodID_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShippingMethodID;
                }
                private static void _ShippingMethodID_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ShippingMethodID = v;
                }
                private static void _ShippingMethodID_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShippingMethodID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipResidential = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipResidential",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipResidential_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipResidential_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipResidential_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipResidential_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipResidential_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipResidential_OnValueChanged);
                private static void _ShipResidential_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipResidential, sf);
                }
                private static bool _ShipResidential_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipResidential_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipResidential_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipResidential_Validate(r);
                }
                private static string _ShipResidential_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipResidential;
                }
                private static void _ShipResidential_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipResidential = v;
                }
                private static void _ShipResidential_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipResidential_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ShipFaxNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ShipFaxNumber",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFaxNumber_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFaxNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFaxNumber_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFaxNumber_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFaxNumber_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ShipFaxNumber_OnValueChanged);
                private static void _ShipFaxNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipFaxNumber, sf);
                }
                private static bool _ShipFaxNumber_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ShipFaxNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipFaxNumber_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipFaxNumber_Validate(r);
                }
                private static string _ShipFaxNumber_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipFaxNumber;
                }
                private static void _ShipFaxNumber_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipFaxNumber = v;
                }
                private static void _ShipFaxNumber_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ShipFaxNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, int>.Entry
                    OrderDetailID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, int>.Entry(
                        "OrderDetailID",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderDetailID_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderDetailID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderDetailID_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderDetailID_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderDetailID_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderDetailID_OnValueChanged);
                private static void _OrderDetailID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, int>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderDetailID, sf);
                }
                private static bool _OrderDetailID_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.OrderDetailID_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderDetailID_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderDetailID_Validate(r);
                }
                private static int _OrderDetailID_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderDetailID;
                }
                private static void _OrderDetailID_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, int v)
                {
                    d.ImplementationEntity.OrderDetailID = v;
                }
                private static void _OrderDetailID_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.OrderDetailID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    GiftWrap = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "GiftWrap",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrap_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrap_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrap_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrap_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrap_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrap_OnValueChanged);
                private static void _GiftWrap_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._GiftWrap, sf);
                }
                private static bool _GiftWrap_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.GiftWrap_IsReadOnly(ref result);
                    return result;
                }
                private static void _GiftWrap_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GiftWrap_Validate(r);
                }
                private static string _GiftWrap_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.GiftWrap;
                }
                private static void _GiftWrap_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.GiftWrap = v;
                }
                private static void _GiftWrap_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.GiftWrap_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    GiftTrakNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "GiftTrakNumber",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftTrakNumber_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftTrakNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftTrakNumber_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftTrakNumber_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftTrakNumber_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftTrakNumber_OnValueChanged);
                private static void _GiftTrakNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._GiftTrakNumber, sf);
                }
                private static bool _GiftTrakNumber_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.GiftTrakNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _GiftTrakNumber_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GiftTrakNumber_Validate(r);
                }
                private static global::System.Nullable<int> _GiftTrakNumber_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.GiftTrakNumber;
                }
                private static void _GiftTrakNumber_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.GiftTrakNumber = v;
                }
                private static void _GiftTrakNumber_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.GiftTrakNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Entry
                    GiftWrapCost = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "GiftWrapCost",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapCost_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapCost_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapCost_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapCost_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapCost_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapCost_OnValueChanged);
                private static void _GiftWrapCost_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._GiftWrapCost, sf);
                }
                private static bool _GiftWrapCost_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.GiftWrapCost_IsReadOnly(ref result);
                    return result;
                }
                private static void _GiftWrapCost_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GiftWrapCost_Validate(r);
                }
                private static global::System.Nullable<decimal> _GiftWrapCost_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.GiftWrapCost;
                }
                private static void _GiftWrapCost_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.GiftWrapCost = v;
                }
                private static void _GiftWrapCost_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.GiftWrapCost_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    GiftWrapNote = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "GiftWrapNote",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapNote_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapNote_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapNote_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapNote_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapNote_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._GiftWrapNote_OnValueChanged);
                private static void _GiftWrapNote_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._GiftWrapNote, sf);
                }
                private static bool _GiftWrapNote_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.GiftWrapNote_IsReadOnly(ref result);
                    return result;
                }
                private static void _GiftWrapNote_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GiftWrapNote_Validate(r);
                }
                private static string _GiftWrapNote_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.GiftWrapNote;
                }
                private static void _GiftWrapNote_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.GiftWrapNote = v;
                }
                private static void _GiftWrapNote_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.GiftWrapNote_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    IsKitID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "IsKitID",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._IsKitID_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._IsKitID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._IsKitID_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._IsKitID_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._IsKitID_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._IsKitID_OnValueChanged);
                private static void _IsKitID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._IsKitID, sf);
                }
                private static bool _IsKitID_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.IsKitID_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsKitID_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsKitID_Validate(r);
                }
                private static string _IsKitID_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.IsKitID;
                }
                private static void _IsKitID_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IsKitID = v;
                }
                private static void _IsKitID_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.IsKitID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    KitID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "KitID",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._KitID_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._KitID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._KitID_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._KitID_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._KitID_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._KitID_OnValueChanged);
                private static void _KitID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._KitID, sf);
                }
                private static bool _KitID_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.KitID_IsReadOnly(ref result);
                    return result;
                }
                private static void _KitID_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.KitID_Validate(r);
                }
                private static global::System.Nullable<int> _KitID_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.KitID;
                }
                private static void _KitID_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.KitID = v;
                }
                private static void _KitID_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.KitID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    OnOrder_Qty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "OnOrder_Qty",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OnOrder_Qty_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OnOrder_Qty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OnOrder_Qty_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OnOrder_Qty_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OnOrder_Qty_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OnOrder_Qty_OnValueChanged);
                private static void _OnOrder_Qty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._OnOrder_Qty, sf);
                }
                private static bool _OnOrder_Qty_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.OnOrder_Qty_IsReadOnly(ref result);
                    return result;
                }
                private static void _OnOrder_Qty_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OnOrder_Qty_Validate(r);
                }
                private static global::System.Nullable<int> _OnOrder_Qty_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.OnOrder_Qty;
                }
                private static void _OnOrder_Qty_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.OnOrder_Qty = v;
                }
                private static void _OnOrder_Qty_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.OnOrder_Qty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    OptionIDs = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "OptionIDs",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OptionIDs_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OptionIDs_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OptionIDs_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OptionIDs_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OptionIDs_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OptionIDs_OnValueChanged);
                private static void _OptionIDs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._OptionIDs, sf);
                }
                private static bool _OptionIDs_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.OptionIDs_IsReadOnly(ref result);
                    return result;
                }
                private static void _OptionIDs_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OptionIDs_Validate(r);
                }
                private static global::System.Nullable<int> _OptionIDs_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.OptionIDs;
                }
                private static void _OptionIDs_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.OptionIDs = v;
                }
                private static void _OptionIDs_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.OptionIDs_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    Options = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "Options",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Options_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Options_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Options_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Options_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Options_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Options_OnValueChanged);
                private static void _Options_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._Options, sf);
                }
                private static bool _Options_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.Options_IsReadOnly(ref result);
                    return result;
                }
                private static void _Options_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Options_Validate(r);
                }
                private static string _Options_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.Options;
                }
                private static void _Options_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Options = v;
                }
                private static void _Options_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.Options_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    OrderID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "OrderID",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderID_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderID_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderID_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderID_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._OrderID_OnValueChanged);
                private static void _OrderID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderID, sf);
                }
                private static bool _OrderID_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.OrderID_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderID_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderID_Validate(r);
                }
                private static global::System.Nullable<int> _OrderID_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderID;
                }
                private static void _OrderID_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.OrderID = v;
                }
                private static void _OrderID_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.OrderID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ProductCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ProductCode",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductCode_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductCode_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductCode_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductCode_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductCode_OnValueChanged);
                private static void _ProductCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductCode, sf);
                }
                private static bool _ProductCode_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ProductCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductCode_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductCode_Validate(r);
                }
                private static string _ProductCode_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductCode;
                }
                private static void _ProductCode_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProductCode = v;
                }
                private static void _ProductCode_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ProductCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    ProductID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ProductID",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductID_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductID_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductID_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductID_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductID_OnValueChanged);
                private static void _ProductID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductID, sf);
                }
                private static bool _ProductID_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ProductID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductID_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductID_Validate(r);
                }
                private static global::System.Nullable<int> _ProductID_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductID;
                }
                private static void _ProductID_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ProductID = v;
                }
                private static void _ProductID_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ProductID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry
                    ProductName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Entry(
                        "ProductName",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductName_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductName_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductName_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductName_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductName_OnValueChanged);
                private static void _ProductName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductName, sf);
                }
                private static bool _ProductName_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ProductName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductName_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductName_Validate(r);
                }
                private static string _ProductName_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductName;
                }
                private static void _ProductName_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProductName = v;
                }
                private static void _ProductName_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ProductName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ProductPrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ProductPrice",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductPrice_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductPrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductPrice_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductPrice_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductPrice_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductPrice_OnValueChanged);
                private static void _ProductPrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductPrice, sf);
                }
                private static bool _ProductPrice_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ProductPrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductPrice_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductPrice_Validate(r);
                }
                private static global::System.Nullable<decimal> _ProductPrice_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductPrice;
                }
                private static void _ProductPrice_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ProductPrice = v;
                }
                private static void _ProductPrice_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ProductPrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    ProductWeight = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ProductWeight",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductWeight_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductWeight_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductWeight_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductWeight_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductWeight_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._ProductWeight_OnValueChanged);
                private static void _ProductWeight_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductWeight, sf);
                }
                private static bool _ProductWeight_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.ProductWeight_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductWeight_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductWeight_Validate(r);
                }
                private static global::System.Nullable<int> _ProductWeight_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductWeight;
                }
                private static void _ProductWeight_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ProductWeight = v;
                }
                private static void _ProductWeight_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.ProductWeight_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry
                    Sent = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Sent",
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Sent_Stub,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Sent_ComputeIsReadOnly,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Sent_Validate,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Sent_GetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Sent_SetImplementationValue,
                        global::LightSwitchApplication.Orders_For_Art.DetailsClass.PropertySetProperties._Sent_OnValueChanged);
                private static void _Sent_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Orders_For_Art.DetailsClass d, object sf)
                {
                    c(d, ref d._Sent, sf);
                }
                private static bool _Sent_ComputeIsReadOnly(global::LightSwitchApplication.Orders_For_Art e)
                {
                    bool result = false;
                    e.Sent_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sent_Validate(global::LightSwitchApplication.Orders_For_Art e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sent_Validate(r);
                }
                private static global::System.Nullable<int> _Sent_GetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d)
                {
                    return d.ImplementationEntity.Sent;
                }
                private static void _Sent_SetImplementationValue(global::LightSwitchApplication.Orders_For_Art.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Sent = v;
                }
                private static void _Sent_OnValueChanged(global::LightSwitchApplication.Orders_For_Art e)
                {
                    e.Sent_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipFirstName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipLastName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipCompanyName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipAddress1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipAddress2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipCity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipState;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipPostalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipCountry;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipPhoneNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _Shipping_Locked;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _ShippingMethodID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipResidential;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ShipFaxNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, int>.Data _OrderDetailID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _GiftWrap;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _GiftTrakNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Data _GiftWrapCost;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _GiftWrapNote;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _IsKitID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _KitID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _OnOrder_Qty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _OptionIDs;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _Options;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _OrderID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ProductCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _ProductID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, string>.Data _ProductName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<decimal>>.Data _ProductPrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _ProductWeight;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Orders_For_Art, global::LightSwitchApplication.Orders_For_Art.DetailsClass, global::System.Nullable<int>>.Data _Sent;
            
        }
    
        #endregion
    }
    
    #endregion
}
