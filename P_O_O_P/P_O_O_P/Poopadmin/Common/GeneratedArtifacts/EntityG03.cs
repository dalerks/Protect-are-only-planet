

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class ORG : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ORG entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ORG()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ORG(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ORG> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ORG.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_ID
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_ID);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_Name
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Name);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_Address1
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Address1);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Address1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Address1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Address1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Address1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_Address2
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Address2);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Address2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Address2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Address2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Address2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_City
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_City);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_State
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_State);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_Contact
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Contact);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Contact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ORG_Phone
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Phone);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Phone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Phone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Phone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Phone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ORG_Goal
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Goal);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Goal, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Goal_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Goal_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ORG_Goal_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> Enabled
        {
            get
            {
                return global::LightSwitchApplication.ORG.DetailsClass.GetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.Enabled);
            }
            set
            {
                global::LightSwitchApplication.ORG.DetailsClass.SetValue(this, global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.Enabled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ORG,
                global::LightSwitchApplication.ORG.DetailsClass,
                global::LightSwitchApplication.ORG.DetailsClass.IImplementation,
                global::LightSwitchApplication.ORG.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass>.Entry
                __ORGEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass>.Entry(
                    global::LightSwitchApplication.ORG.DetailsClass.__ORG_CreateNew,
                    global::LightSwitchApplication.ORG.DetailsClass.__ORG_Created,
                    global::LightSwitchApplication.ORG.DetailsClass.__ORG_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ORG __ORG_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ORG> es)
            {
                return new global::LightSwitchApplication.ORG(es);
            }
            private static void __ORG_Created(global::LightSwitchApplication.ORG e)
            {
                e.ORG_Created();
            }
            private static bool __ORG_AllowSaveWithErrors(global::LightSwitchApplication.ORG e)
            {
                bool result = false;
                e.ORG_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ORG.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_Address1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Address1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_Address2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Address2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_Contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Contact) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string> ORG_Phone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Phone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<decimal>> ORG_Goal
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.ORG_Goal) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<bool>> Enabled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties.Enabled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ORG_ID { get; set; }
                new string ORG_Name { get; set; }
                new string ORG_Address1 { get; set; }
                new string ORG_Address2 { get; set; }
                new string ORG_City { get; set; }
                new string ORG_State { get; set; }
                new string ORG_Contact { get; set; }
                new string ORG_Phone { get; set; }
                new global::System.Nullable<decimal> ORG_Goal { get; set; }
                new global::System.Nullable<bool> Enabled { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_ID",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_ID_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_ID_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_ID_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_ID_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_ID_OnValueChanged);
                private static void _ORG_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_ID, sf);
                }
                private static bool _ORG_ID_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_ID_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_ID_Validate(r);
                }
                private static string _ORG_ID_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_ID;
                }
                private static void _ORG_ID_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_ID = v;
                }
                private static void _ORG_ID_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_Name",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Name_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Name_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Name_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Name_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Name_OnValueChanged);
                private static void _ORG_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_Name, sf);
                }
                private static bool _ORG_Name_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_Name_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_Name_Validate(r);
                }
                private static string _ORG_Name_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_Name;
                }
                private static void _ORG_Name_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_Name = v;
                }
                private static void _ORG_Name_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_Address1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_Address1",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address1_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address1_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address1_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address1_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address1_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address1_OnValueChanged);
                private static void _ORG_Address1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_Address1, sf);
                }
                private static bool _ORG_Address1_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_Address1_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_Address1_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_Address1_Validate(r);
                }
                private static string _ORG_Address1_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_Address1;
                }
                private static void _ORG_Address1_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_Address1 = v;
                }
                private static void _ORG_Address1_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_Address1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_Address2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_Address2",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address2_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address2_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address2_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address2_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address2_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Address2_OnValueChanged);
                private static void _ORG_Address2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_Address2, sf);
                }
                private static bool _ORG_Address2_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_Address2_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_Address2_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_Address2_Validate(r);
                }
                private static string _ORG_Address2_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_Address2;
                }
                private static void _ORG_Address2_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_Address2 = v;
                }
                private static void _ORG_Address2_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_Address2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_City",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_City_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_City_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_City_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_City_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_City_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_City_OnValueChanged);
                private static void _ORG_City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_City, sf);
                }
                private static bool _ORG_City_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_City_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_City_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_City_Validate(r);
                }
                private static string _ORG_City_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_City;
                }
                private static void _ORG_City_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_City = v;
                }
                private static void _ORG_City_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_State",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_State_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_State_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_State_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_State_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_State_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_State_OnValueChanged);
                private static void _ORG_State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_State, sf);
                }
                private static bool _ORG_State_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_State_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_State_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_State_Validate(r);
                }
                private static string _ORG_State_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_State;
                }
                private static void _ORG_State_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_State = v;
                }
                private static void _ORG_State_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_Contact = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_Contact",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Contact_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Contact_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Contact_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Contact_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Contact_OnValueChanged);
                private static void _ORG_Contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_Contact, sf);
                }
                private static bool _ORG_Contact_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_Contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_Contact_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_Contact_Validate(r);
                }
                private static string _ORG_Contact_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_Contact;
                }
                private static void _ORG_Contact_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_Contact = v;
                }
                private static void _ORG_Contact_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_Contact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry
                    ORG_Phone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Entry(
                        "ORG_Phone",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Phone_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Phone_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Phone_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Phone_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Phone_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Phone_OnValueChanged);
                private static void _ORG_Phone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_Phone, sf);
                }
                private static bool _ORG_Phone_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_Phone_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_Phone_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_Phone_Validate(r);
                }
                private static string _ORG_Phone_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_Phone;
                }
                private static void _ORG_Phone_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ORG_Phone = v;
                }
                private static void _ORG_Phone_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_Phone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ORG_Goal = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ORG_Goal",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Goal_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Goal_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Goal_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Goal_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Goal_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._ORG_Goal_OnValueChanged);
                private static void _ORG_Goal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._ORG_Goal, sf);
                }
                private static bool _ORG_Goal_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.ORG_Goal_IsReadOnly(ref result);
                    return result;
                }
                private static void _ORG_Goal_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ORG_Goal_Validate(r);
                }
                private static global::System.Nullable<decimal> _ORG_Goal_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.ORG_Goal;
                }
                private static void _ORG_Goal_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ORG_Goal = v;
                }
                private static void _ORG_Goal_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.ORG_Goal_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<bool>>.Entry
                    Enabled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "Enabled",
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._Enabled_Stub,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._Enabled_ComputeIsReadOnly,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._Enabled_Validate,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._Enabled_GetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._Enabled_SetImplementationValue,
                        global::LightSwitchApplication.ORG.DetailsClass.PropertySetProperties._Enabled_OnValueChanged);
                private static void _Enabled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ORG.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ORG.DetailsClass d, object sf)
                {
                    c(d, ref d._Enabled, sf);
                }
                private static bool _Enabled_ComputeIsReadOnly(global::LightSwitchApplication.ORG e)
                {
                    bool result = false;
                    e.Enabled_IsReadOnly(ref result);
                    return result;
                }
                private static void _Enabled_Validate(global::LightSwitchApplication.ORG e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Enabled_Validate(r);
                }
                private static global::System.Nullable<bool> _Enabled_GetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d)
                {
                    return d.ImplementationEntity.Enabled;
                }
                private static void _Enabled_SetImplementationValue(global::LightSwitchApplication.ORG.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.Enabled = v;
                }
                private static void _Enabled_OnValueChanged(global::LightSwitchApplication.ORG e)
                {
                    e.Enabled_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_Address1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_Address2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_Contact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, string>.Data _ORG_Phone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<decimal>>.Data _ORG_Goal;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ORG, global::LightSwitchApplication.ORG.DetailsClass, global::System.Nullable<bool>>.Data _Enabled;
            
        }
    
        #endregion
    }
    
    #endregion
}
